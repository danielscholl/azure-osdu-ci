{{- $elasticInstances := .Values.elasticInstances | default 1 | int }}
{{- range $i := until $elasticInstances }}
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch-{{ $i }}
  namespace: {{ $.Release.Namespace }}
  annotations:
    eck.k8s.elastic.co/downward-node-labels: "topology.kubernetes.io/zone"
spec:
  version: {{ $.Values.elasticVersion }}
  secureSettings:
  - secretName: {{ $.Release.Name }}-keystore
  nodeSets:
  - name: default
    count: 1
    podTemplate:
      metadata:
        labels:
          azure.workload.identity/use: "true"
      spec:
        serviceAccountName: workload-identity-sa
        containers:
        - name: elasticsearch
          env:
          - name: AZURE_FEDERATED_TOKEN_FILE
            value: /usr/share/elasticsearch/config/azure/tokens/azure-identity-token
          - name: NODE_ZONE
            valueFrom:
              fieldRef:
                fieldPath: metadata.annotations['topology.kubernetes.io/zone']
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"
            limits:
              memory: "3Gi"
              cpu: "2"
          volumeMounts:
            - name: azure-identity-token
              mountPath: /usr/share/elasticsearch/config/azure/tokens
        {{- if $.Values.resiliency | default false }}
        tolerations:
        - effect: NoSchedule
          key: app
          value: "cluster-paas"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: agentpool
                  operator: In
                  values:
                  - z1pool
                  - z2pool
                  - z3pool
              - matchExpressions:
                - key: topology.kubernetes.io/zone
                  operator: In
                  values:
                  - "$(ZONE)-1"
                  - "$(ZONE)-2"
                  - "$(ZONE)-3"
        {{- end }}
    config:
      node.store.allow_mmap: false
      node.roles: ["master", "data", "ingest"]
      node.attr.zone: "${NODE_ZONE}"
      cluster.routing.allocation.awareness.attributes: k8s_node_name,zone
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ $.Values.storageSize | default "4Gi" }}
        storageClassName: {{ $.Values.storageClass | default "managed-premium" }}
  http:
    tls:
      selfSignedCertificate:
        disabled: true
{{- end }}