{{- $elasticInstances := .Values.elasticInstances | default 1 | int }}
{{- range $i := until $elasticInstances }}
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch-{{ $i }}
  namespace: {{ $.Release.Namespace }}
  annotations:
    eck.k8s.elastic.co/downward-node-labels: "topology.kubernetes.io/zone"
spec:
  version: {{ $.Values.elasticVersion }}
  http:
    tls:
      selfSignedCertificate:
        disabled: true
    service:
      spec:
        type: ClusterIP
  nodeSets:
    - name: default
      count: 1
      config:
        node.attr.zone: "${ZONE}"
        cluster.routing.allocation.awareness.attributes: k8s_node_name,zone
        # Disable memory mapping to avoid vm.max_map_count bootstrap check
        node.store.allow_mmap: false
      podTemplate:
        metadata:
          labels:
            azure.workload.identity/use: "true"
        spec:
          initContainers:
          - name: install-plugins
            command:
            - sh
            - -c
            - |
              bin/elasticsearch-plugin install --batch repository-azure
          serviceAccountName: workload-identity-sa
          containers:
            - name: elasticsearch
              env:
                - name: ZONE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['topology.kubernetes.io/zone']
                - name: AZURE_FEDERATED_TOKEN_FILE
                  value: /var/run/secrets/azure/tokens/azure-identity-token
                {{- if $.Values.azure.storageAccountName }}
                - name: ES_JAVA_OPTS
                  value: >-
                    -Drepository.azure.client.default.account={{ $.Values.azure.storageAccountName }}
                    -Drepository.azure.client.default.auth=MSI
                    -Drepository.azure.token_file=/var/run/secrets/azure/tokens/azure-identity-token
                {{- end }}
          tolerations:
            - effect: NoSchedule
              key: app
              value: "cluster-paas"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: agentpool
                        operator: In
                        values:
                          - z1pool
                          - z2pool
                          - z3pool
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  elasticsearch.k8s.elastic.co/cluster-name: elasticsearch-{{ $i }}
                  elasticsearch.k8s.elastic.co/statefulset-name: elasticsearch-{{ $i }}-es-default
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ $.Values.storageSize }}
            storageClassName: {{ $.Values.storageClass | default "managed-premium" }}
{{- end }}
